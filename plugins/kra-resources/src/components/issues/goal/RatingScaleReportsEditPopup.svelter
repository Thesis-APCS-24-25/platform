<script lang="ts">
  import { getClient } from '@hcengineering/presentation'
  import kra from '../../../plugin'
  import { Issue, Kpi, KpiReport, RatingScale } from '@hcengineering/kra'
  import KpiProgressBar from './KpiProgressBar.svelte'
  import { getTimeReportDate } from '../../../utils'
  import { createEventDispatcher } from 'svelte'
  import { Employee } from '@hcengineering/contact'
  import { AttachedData, Ref, Space } from '@hcengineering/core'
  import ReportEditPopup from './ReportEditPopup.svelte'

  export let issue: Issue | undefined = undefined
  export let goal: RatingScale
  export let latestRating: number | undefined = undefined

  const space: Ref<Space> | undefined = issue?.space
  const assignee: Ref<Employee> | null | undefined = issue?.assignee as Ref<Employee>

  const dispatch = createEventDispatcher()
  const client = getClient()
  const data = {
    value: undefined as number | undefined,
    date: getTimeReportDate(timeReportDateType),
    employee: assignee ?? null,
    comment: ''
  }

  $: canSave = data.value !== undefined && Number.isFinite(data.value) && data.value >= 0 && space !== undefined

  async function save (): Promise<void> {
    if (canSave) {
      await client.addCollection(
        kra.class.KpiReport,
        space,
        goal._id,
        goal._class,
        'reports',
        data as AttachedData<KpiReport>
      )
    }
    dispatch('close')
  }
</script>

<ReportEditPopup {save} {canSave} assignee={data.employee} reportDate={data.date}>
  <svelte:fragment slot="content">
    <div class="kpi-value">
      <div>
        <span class="mr-1"> {sum} + </span>
      </div>
      <div class="clear-mins">
        <EditBox bind:value={data.value} format="number" placeholder={kra.string.Goal} />
      </div>
      <span class="unit">/ {kpi.target} ({kpi.$lookup?.unit?.name})</span>
    </div>
    <div class="mt-4">
      <EditBox placeholder={kra.string.Comment} bind:value={data.comment} />
    </div>
    <div class="mt-4 mb-4">
      <KpiProgressBar value={sum} max={kpi.target} additionalValue={data.value} />
    </div>
  </svelte:fragment>
</ReportEditPopup>

<style>
  .kpi-value {
    display: flex;
    justify-content: flex-start;
    align-items: center;
  }

  .unit {
    border: 1px solid var(--theme-secondary-color, #e2e8f0);
    padding: 0.5rem 0.75rem;
    border-radius: 0.25rem;
    font-size: 0.8rem;
    font-style: italic;
    color: var(--gray-500);
  }
</style>
